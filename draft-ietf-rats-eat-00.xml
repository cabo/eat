<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.11 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc rfcedstyle="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-rats-eat-00" category="std">

  <front>
    <title abbrev="EAT">The Entity Attestation Token (EAT)</title>

    <author initials="G." surname="Mandyam" fullname="Giridhar Mandyam">
      <organization>Qualcomm Technologies Inc.</organization>
      <address>
        <postal>
          <street>5775 Morehouse Drive</street>
          <city>San Diego</city>
          <region>California</region>
          <country>USA</country>
        </postal>
        <phone>+1 858 651 7200</phone>
        <email>mandyam@qti.qualcomm.com</email>
      </address>
    </author>
    <author initials="L." surname="Lundblade" fullname="Laurence Lundblade">
      <organization>Security Theory LLC</organization>
      <address>
        <email>lgl@island-resort.com</email>
      </address>
    </author>
    <author initials="M." surname="Ballesteros" fullname="Miguel Ballesteros">
      <organization>Qualcomm Technologies Inc.</organization>
      <address>
        <postal>
          <street>5775 Morehouse Drive</street>
          <city>San Diego</city>
          <region>California</region>
          <country>USA</country>
        </postal>
        <phone>+1 858 651 4299</phone>
        <email>mballest@qti.qualcomm.com</email>
      </address>
    </author>
    <author initials="J." surname="O'Donoghue" fullname="Jeremy O'Donoghue">
      <organization>Qualcomm Technologies Inc.</organization>
      <address>
        <postal>
          <street>279 Farnborough Road</street>
          <city>Farnborough</city>
          <code>GU14 7LS</code>
          <country>United Kingdom</country>
        </postal>
        <phone>+44 1252 363189</phone>
        <email>jodonogh@qti.qualcomm.com</email>
      </address>
    </author>

    <date year="2019" month="June" day="22"/>

    <area>Internet</area>
    <workgroup>RATS Working Group</workgroup>
    <keyword>signing attestation cbor</keyword>

    <abstract>


<t>An attestation format based on concise binary object representation
(CBOR) is proposed that is suitable for inclusion in a CBOR Web Token
(CWT), know as the Entity Attestation Token (EAT).  The associated
data can be used by a relying party to assess the security state of a
remote device or module.</t>



    </abstract>


    <note title="Contributing">


<t>TBD</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Remote device attestation is fundamental service that allows a remote
device such as a mobile phone, an Internet-of-Things (IoT) device, or
other endpoint to prove itself to a relying party, a server or a service.  This
allows the relying party to know some characteristics about the device
and decide whether it trusts the device.</t>

<t>Remote attestation is a fundamental service that can underlie other
protocols and services that need to know about the trustworthiness of
the device before proceeding. One good example is biometric
authentication where the biometric matching is done on the device. The
relying party needs to know that the device is one that is known to do
biometric matching correctly.  Another example is content protection
where the relying party wants to know the device will protect the
data.  This generalizes on to corporate enterprises that might want to
know that a device is trustworthy before allowing corporate data to be
accessed by it.</t>

<t>The notion of attestation here is large and may include, but is not
limited to the following:</t>

<t><list style="symbols">
  <t>Proof of the make and model of the device hardware (HW)</t>
  <t>Proof of the make and model of the device processor, particularly
for security oriented chips</t>
  <t>Measurement of the software (SW) running on the device</t>
  <t>Configuration and state of the device</t>
  <t>Environmental characteristics of the device such as its GPS location</t>
</list></t>

<t>The required data format should be general purpose and extensible so
that it can work across many use cases.  This is why CBOR (see <xref target="RFC7049"/>) 
was chosen as the format — it already
supports a rich set of data types, and is both expressive and
extensible.  It translates well to JSON for good interoperation with
web technology. It is compact and can work on very small IoT
device. The format proposed here is small enough that a limited
version can be implemented in pure hardware gates with no software at
all.  Moreover, the attestation data is defined in the form of claims
that is the same as CBOR Web Token (CWT, see <xref target="RFC8392"/>). 
This is the motivation for defining the Entity Attestation Token, i.e. EAT.</t>

<section anchor="entity-overview" title="Entity Overview">

<t>An “entity” can be any device or device subassembly (“submodule”) that
can generate its own attestation in the form of an EAT.  The
attestation should be cryptographically verifiable by the EAT
consumer. An EAT at the device-level can be composed of several
submodule EAT’s.  It is assumed that any entity that can create an EAT
does so by means of a dedicated root-of-trust (RoT).</t>

<t>Modern devices such as a mobile phone have many different execution
environments operating with different security levels. For example it
is common for a mobile phone to have an “apps” environment that runs
an operating system (OS) that hosts a plethora of downloadable apps. It may also have a
TEE (Trusted Execution Environment) that is distinct, isolated, and
hosts security-oriented functionality like biometric
authentication. Additionally it may have an eSE (embedded Secure
Element) - a high security chip with defenses against HW attacks that
can serve as a RoT.  This device attestation format allows the
attested data to be tagged at a security level from which it
originates.  In general, any discrete execution environment that has
an identifiable security level can be considered an entity.</t>

</section>
<section anchor="use-of-cbor-and-cose" title="Use of CBOR and COSE">

<t>Fundamentally this attestation format is a verifiable data format. It is a 
collection of data items that can be signed by an attestation key, hashed,
and/or encrypted.  As per Section 7 of <xref target="RFC8392"/>, the
verification method is in the CWT using the CBOR Object Signing and 
Encryption (COSE) methodology (see <xref target="RFC8152"/>).</t>

<t>In addition, the reported attestation data could be determined within the
secure operating environment or written to it from an external and
presumably less trusted entity on the device.  In either case, the 
source of the reported data
must be identifiable by the relying party.</t>

<t>This attestation format is a single relatively simple signed message. 
It is designed to be incorporated into many
other protocols and many other transports.  It is also designed
such that other SW and apps can add their own data to
the message such that it is also attested.</t>

</section>
<section anchor="eat-operating-models" title="EAT Operating Models">

<t>At least the following three participants exist in all EAT operating
models. Some operating models have additional participants.</t>

<t><list style="hanging">
  <t hangText='The Entity.'>
  This is the phone, the IoT device, the sensor, the sub-assembly or
such that the attestation provides information about.</t>
  <t hangText='The Manufacturer.'>
  The company that made the entity.  This may be a chip vendor, a
circuit board module vendor or a vendor of finished consumer products.</t>
  <t hangText='The Relying Party.'>
  The server, service or company that makes use of the information in
the EAT about the entity.</t>
</list></t>

<t>In all operating models, the manufacturer provisions some secret attestation
key material (AKM) into the entity during manufacturing.  This might be during
the manufacturer of a chip at a fabrication facility (fab) or during final assembly of a
consumer product or any time in between. This attestation key material is used for
signing EATs.</t>

<t>In all operating models, hardware and/or software on the entity create
an EAT of the format described in this document. The EAT is always
signed by the attestation key material provisioned by the manufacturer.</t>

<t>In all operating models, the relying party must end up knowing that
the signature on the EAT is valid and consistent with data from claims in the
EAT.  This can happen in many different ways. Here are some examples.</t>

<t><list style="symbols">
  <t>The EAT is transmitted to the relying party. The relying party gets
corresponding key material (e.g. a root certificate) from the manufacturer. The
relying party performs the verification.</t>
  <t>The EAT is transmitted to the relying party. The relying party
transmits the EAT to a verification service offered by the
manufacturer. The server returns the validated claims.</t>
  <t>The EAT is transmitted directly to a verification service, perhaps
operated by the manufacturer or perhaps by another party. It
verifies the EAT and makes the validated claims available to the
relying party. It may even modify the claims in some way and re-sign
the EAT (with a different signing key).</t>
</list></t>

<t>This standard supports all these operating models and does not prefer
one over the other. It is important to support this variety of
operating models to generally facilitate deployment and to allow for
some special scenarios. One special scenario has a validation service
that is monetized, most likely by the manufacturer.  In another, a
privacy proxy service processes the EAT before it is transmitted to
the relying party. In yet another, symmetric key material is used for
signing. In this case the manufacturer should perform the verification,
because any release of the key material would enable a participant other than the
entity to create valid signed EATs.</t>

</section>
<section anchor="what-is-not-standardized" title="What is Not Standardized">

<section anchor="transmission-protocol" title="Transmission Protocol">

<t>EATs may be transmitted by any protocol. For example, they might be
added in extension fields of other protocols, bundled into an
HTTP header, or just transmitted as files. This flexibility is
intentional to allow broader adoption. This flexibility is possible because EAT’s
are self-secured with signing (and possibly additionally with
encryption and anti-replay). The transmission protocol is not required to fulfill any additional
security requirements.</t>

<t>For certain devices, a direct connection may not exist between the 
EAT-producing device and the Relying Party. In such cases, the EAT 
should be protected against malicious access. The use of COSE allows
for signing and encryption of the EAT. Therefore even if the EAT is
conveyed through intermediaries between the device and Relying Party,
such intermediaries cannot easily modify the EAT payload or alter the
signature.</t>

</section>
<section anchor="signing-scheme" title="Signing Scheme">

<t>The term “signing scheme” is used to refer to the system that includes
end-end process of establishing signing attestation key material in the entity,
signing the EAT, and verifying it. This might involve key IDs and
X.509 certificate chains or something similar but different. The term
“signing algorithm” refers just to the algorithm ID in the COSE
signing structure. No particular signing algorithm or signing scheme
is required by this standard.</t>

<t>There are three main implementation issues driving this. First,
secure non-volatile storage space in the entity for the attestation key
material may be highly limited, perhaps to only a few hundred bits, on
some small IoT chips. Second, the factory cost of provisioning key
material in each chip or device may be high, with even millisecond
delays adding to the cost of a chip. Third, privacy-preserving signing
schemes like ECDAA (Elliptic Curve Direct Anonymous Attestation) are 
complex and not suitable for all use cases.</t>

<t>Eventually some form of standardization of the signing scheme may be
required. This might come in the form of another standard that adds to
this document, or when there is clear convergence on a small number of
signing schemes this standard can be updated.</t>

</section>
</section>
</section>
<section anchor="terminology" title="Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all
capitals, as shown here.</t>

<t>This document reuses terminology from JWT <xref target="RFC7519"/>, COSE
<xref target="RFC8152"/>, and CWT <xref target="RFC8392"/>.</t>

<t><list style="hanging">
  <t hangText='StringOrURI.'>
  The “StringOrURI” term in this specification has the same meaning
and processing rules as the JWT “StringOrURI” term defined in
Section 2 of <xref target="RFC7519"/>, except that it is represented as a CBOR
text string instead of a JSON text string.</t>
  <t hangText='NumericDate.'>
  The “NumericDate” term in this specification has the same meaning
and processing rules as the JWT “NumericDate” term defined in
Section 2 of <xref target="RFC7519"/>, except that it is represented as a CBOR
numeric date (from Section 2.4.1 of <xref target="RFC7049"/>) instead of a JSON
number.  The encoding is modified so that the leading tag 1
(epoch-based date/time) MUST be omitted.</t>
  <t hangText='Claim Name.'>
  The human-readable name used to identify a claim.</t>
  <t hangText='Claim Key.'>
  The CBOR map key used to identify a claim.</t>
  <t hangText='Claim Value.'>
  The CBOR map value representing the value of the claim.</t>
  <t hangText='CWT Claims Set.'>
  The CBOR map that contains the claims conveyed by the CWT.</t>
  <t hangText='FloatOrNumber.'>
  The “FloatOrNumber” term in this specification is the type
of a claim that is either a CBOR positive integer, negative integer
or floating point number.</t>
  <t hangText='Attestation Key Material (AKM).'>
  The key material used to sign the EAT token. If it is done
symmetrically with HMAC, then this is a simple symmetric key.
If it is done with ECC, such as an IEEE DevID <xref target="IDevID"/>, then this
is the private part of the EC key pair. If ECDAA 
is used, (e.g., as used by Enhanced Privacy ID, i.e. EPID) then it is the key material 
needed for ECDAA.</t>
</list></t>

</section>
<section anchor="the-claims" title="The Claims">

<section anchor="universal-entity-id-ueid-claim" title="Universal Entity ID (UEID) Claim">

<t>UEID’s identify individual manufactured entities / devices such as a
mobile phone, a water meter, a Bluetooth speaker or a networked
security camera.  It may identify the entire device or a submodule or 
subsystem. It does
not identify types, models or classes of devices.  It is akin to a
serial number, though it does not have to be sequential.</t>

<t>It is identified by Claim Key X (X is TBD).</t>

<t>UEID’s must be universally and globally unique across manufacturers
and countries. UEIDs must also be unique across protocols and systems,
as tokens are intended to be embedded in many different protocols and
systems. No two products anywhere, even in completely different
industries made by two different manufacturers in two different
countries. should have the same UEID (if they are not global and
universal in this way then relying parties receiving them will have to
track other characteristics of the device to keep devices distinct
between manufacturers).</t>

<t>The UEID should be permanent. It should never change for a given
device / entity. In addition, it should not be reprogrammable.</t>

<t>UEID’s are binary byte-strings (resulting in a
smaller size than text strings).  When handled in text-based
protocols, they should be base-64 encoded.</t>

<t>UEID’s are variable length with a maximum size of 33 bytes (1 type
byte and 256 bits). A receivers of a token with UEIDs may reject the
token if a UEID is larger than 33 bytes.</t>

<t>UEID’s are not designed for direct use by humans (e.g., printing on
the case of a device), so no textual representation is defined.</t>

<t>A UEID is a byte string. From the consumer’s view (the rely party) it
is opaque with no bytes having any special meaning.</t>

<t>When the entity constructs the UEID, the first byte is a type and the
following bytes the ID for that type.  Several types are allowed to
accommodate different industries and different manufacturing processes
and to give options to avoid paying fees for certain types of
manufacturer registrations.</t>

<texttable title="UEID Composition Types" anchor="ueid-types-table">
      <ttcol align='left'>Type Byte</ttcol>
      <ttcol align='left'>Type Name</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>0x01</c>
      <c>GUID</c>
      <c>This is a 128 to 256 bit random number generated once and stored in the device. The GUID may be constructed from various identifiers on the device using a hash function or it may be just the raw random number.</c>
      <c>0x02</c>
      <c>IEEE EUI</c>
      <c>This makes use of the IEEE company identification registry. An EUI is made up of an OUI and OUI-36 or a CID, different registered company identifiers, and some unique per-device identifier. EUIs are often the same as or similar to MAC addresses. (Note that while devices with multiple network interfaces may have multiple MAC addresses, there is only one UEID for a device) TODO: normative references to IEEE.</c>
      <c>0x03</c>
      <c>IMEI</c>
      <c>This is a 14-digit identifier consisting of an 8 digit Type Allocation Code and a six digit serial number allocated by the manufacturer, which SHALL be encoded as a binary integer over 48 bits. The IMEI value encoded SHALL NOT include Luhn checksum or SVN information.</c>
      <c>0x04</c>
      <c>EUI-48</c>
      <c>This is a 48-bit identifier formed by concatenating the 24-bit OUI with a 24-bit identifier assigned by the organisation that purchased the OUI.</c>
      <c>0x05</c>
      <c>EUI-60</c>
      <c>This is a 60-bit identifier formed by concatenating the 24-bit OUI with a 36-bit identifier assigned by the organisation that purchased the OUI.</c>
      <c>0x06</c>
      <c>EUI-64</c>
      <c>This is a 64-bit identifier formed by concatenating the 24-bit OUI with a 40-bit identifier assigned by the organisation that purchased the OUI.</c>
</texttable>

<t>The consumer (the Relying Party) of a UEID should treat a UEID as a completely opaque
string of bytes and not make any use of its internal structure. For
example they should not use the OUI part of a type 0x02 UEID to
identify the manufacturer of the device. Instead they should use the
OUI claim that is defined elsewhere. The reasons for this are:</t>

<t><list style="symbols">
  <t>UEIDs types may vary freely from one manufacturer to the next.</t>
  <t>New types of UEIDs may be created. For example a type 0x04 UEID may
be created based on some other manufacturer registration scheme.</t>
  <t>Device manufacturers are allowed to change from one type of UEID to
another anytime they want. For example they may find they can
optimize their manufacturing by switching from type 0x01 to type
0x02 or vice versa.  The main requirement on the manufacturer is
that UEIDs be universally unique.</t>
</list></t>

</section>
<section anchor="origination-origination-claims" title="Origination (origination) Claims">

<t>This claim describes the parts of the device or entity that
are creating the EAT. Often it will be tied back to the
device or chip manufacturer. The following table gives
some examples:</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>Acme-TEE</c>
      <c>The EATs are generated in the TEE authored and configured by “Acme”</c>
      <c>Acme-TPM</c>
      <c>The EATs are generated in a TPM manufactured by “Acme”</c>
      <c>Acme-Linux-Kernel</c>
      <c>The EATs are generated in a Linux kernel configured and shipped by “Acme”</c>
      <c>Acme-TA</c>
      <c>The EATs are generated in a Trusted Application (TA) authored by “Acme”</c>
</texttable>

<t>The claim is represented by Claim Key X+1. It is type StringOrURI.</t>

<t>TODO: consider a more structure approach where the name and the URI
and other are in separate fields.</t>

<t>TODO: This needs refinement. It is somewhat parallel to issuer claim
in CWT in that it describes the authority that created the token.</t>

</section>
<section anchor="oem-identification-by-ieee-oui" title="OEM identification by IEEE OUI">

<t>This claim identifies a device OEM by the IEEE OUI. Reference TBD. It
is a byte string representing the OUI in binary form in network byte
order (TODO: confirm details).</t>

<t>Companies that have more than one IEEE OUI registered with IEEE should
pick one and prefer that for all their devices.</t>

<t>Note that the OUI is in common use as a part of MAC Address. This claim
is only the first bits of the MAC address that identify the
manufacturer. The IEEE
maintains a registry for these in which many companies participate.  This claim is represented
by Claim Key TBD.</t>

</section>
<section anchor="security-level-seclevel-claim" title="Security Level (seclevel) Claim">

<t>EATs have a claim that roughly characterizes the device / entities 
ability to defend against attacks aimed at capturing the signing
key, forging claims and at forging EATs. This is done by roughly 
defining four security levels as described below. This is similar
to the security levels defined in the Metadata Service
definied by the Fast Identity Online (FIDO) Alliance (TODO: reference).</t>

<t>These claims describe security environment and countermeasures
available on the end-entity / client device where
the attestation key reside and the claims originate.</t>

<t>This claim is identified by Claim Key X+2. The value is an
integer between 1 and 4 as defined below.</t>

<t><list style="hanging">
  <t hangText='1 – Unrestricted'>
  There is some expectation that implementor will
protect the attestation signing keys at this level. Otherwise
the EAT provides no meaningful security assurances.</t>
  <t hangText='2– Restricted'>
  Entities at this level should not be general-purpose
operating environments that host features such as app download
systems, web browsers and complex productivity applications.
It is akin to the Secure Restricted level (see below) without the
security orientation. Examples include a WiFi subsystem,
an IoT camera, or sensor device.</t>
  <t hangText='3 – Secure Restricted'>
  Entities at this level must meet the critera defined by FIDO Allowed
Restricted Operating Environments (TODO: reference). Examples include TEE’s and 
schemes using virtualization-based security. Like the FIDO security goal,
security at this level is aimed at defending well against large-scale
network / remote attacks against the device.</t>
  <t hangText='4 – Hardware'>
  Entities at this level must include substantial defense 
against physical or electrical attacks against the device itself.
It is assumed any potential attacker has captured the device and can 
disassemble it. Example include TPMs and Secure Elements.</t>
</list></t>

<t>This claim is not intended as a replacement for a proper end-device
security certification schemes such as those based on FIPS (TODO: reference)
or those based on Common Criteria (TODO: reference). The 
claim made here is solely a self-claim made by the Entity Originator.</t>

</section>
<section anchor="nonce-nonce-claim" title="Nonce (nonce) Claim">

<t>The “nonce” (Nonce) claim represents a random value that can be used
to avoid replay attacks.  This would be ideally generated by the CWT
consumer.  This value is intended to be a CWT companion claim to the
existing JWT claim <spanx style="strong"></spanx><spanx style="emph">IANAJWT</spanx> (TODO: fix this reference).  The nonce claim is
identified by Claim Key X+3.</t>

</section>
<section anchor="secure-boot-and-debug-enable-state-claims" title="Secure Boot and Debug Enable State Claims">

<section anchor="secure-boot-enabled-secbootenabled-claim" title="Secure Boot Enabled (secbootenabled) Claim">

<t>The “secbootenabled” (Secure Boot Enabled) claim represents a boolean
value that indicates whether secure boot is enabled either for an
entire device or an individual submodule.  If it appears at the device
level, then this means that secure boot is enabled for all submodules.
Secure boot enablement allows a secure boot loader to authenticate
software running either in a device or a submodule prior allowing
execution. This claim is identified by Claim Key X+4.</t>

</section>
<section anchor="debug-disabled-debugdisabled-claim" title="Debug Disabled (debugdisabled) Claim">

<t>The “debugdisabled” (Debug Disabled) claim represents a boolean value
that indicates whether debug capabilities are disabled for an entity
(i.e. value of ‘true’).  Debug disablement is considered a
prerequisite before an entity is considered operational.  This claim
is identified by Claim Key X+5.</t>

</section>
<section anchor="debug-disabled-since-boot-debugdisabledsincebboot-claim" title="Debug Disabled Since Boot (debugdisabledsincebboot) Claim">

<t>The “debugdisabledsinceboot” (Debug Disabled Since Boot) claim
represents a boolean value that indicates whether debug capabilities
for the entity were not disabled in any way since boot (i.e. value of
‘true’).  This claim is identified by Claim Key X+6.</t>

</section>
<section anchor="debug-permanent-disable-debugpermanentdisable-claim" title="Debug Permanent Disable (debugpermanentdisable) Claim">

<t>The “debugpermanentdisable” (Debug Permanent Disable) claim represents
a boolean value that indicates whether debug capabilities for the
entity are permanently disabled (i.e. value of ‘true’).  This value
can be set to ‘true’ also if only the manufacturer is allowed to
enabled debug, but the end user is not.  This claim is identified by
Claim Key X+7.</t>

</section>
<section anchor="debug-full-permanent-disable-debugfullpermanentdisable-claim" title="Debug Full Permanent Disable (debugfullpermanentdisable) Claim">

<t>The “debugfullpermanentdisable” (Debug Full Permanent Disable) claim
represents a boolean value that indicates whether debug capabilities
for the entity are permanently disabled (i.e. value of ‘true’).  This
value can only be set to ‘true’ if no party can enable debug
capabilities for the entity. Often this is implemented by blowing a
fuse on a chip as fuses cannot be restored once blown.  This claim is
identified by Claim Key X+8.</t>

</section>
</section>
<section anchor="location-loc-claim" title="Location (loc) Claim">

<t>The “loc” (location) claim is a CBOR-formatted object that describes
the location of the device entity from which the attestation originates.
It is identified by Claim Key X+10.  It is comprised
of an array of additional subclaims
that represent the actual location coordinates (latitude, longitude
and altitude).  The location coordinate claims
are consistent with the WGS84 coordinate system <xref target="WGS84"/>.  In
addition, a subclaim providing the estimated accuracy of the location
measurement is defined.</t>

<section anchor="lat-latitude-claim" title="lat (latitude) claim">

<t>The “lat” (latitude) claim contains the value of the device location
corresponding to its latitude coordinate.  It is of data type FloatOrNumber 
 and identified by Claim Key X+11.</t>

</section>
<section anchor="long-longitude-claim" title="long (longitude) claim">

<t>The “long” (longitude) claim contains the value of the device location
corresponding to its longitude coordinate.  It is of data type FloatOrNumber 
and identified by Claim Key X+12.</t>

</section>
<section anchor="alt-altitude-claim" title="alt (altitude) claim">

<t>The “alt” (altitude) claim contains the value of the device location
corresponding to its altitude coordinate (if available).  It is
of data type FloatOrNumber and identified by Claim Key X+13.</t>

</section>
<section anchor="acc-accuracy-claim" title="acc (accuracy) claim">

<t>The “acc” (accuracy) claim contains a value that describes
the location accuracy.  It is non-negative and expressed in meters. 
It is of data type FloatOrNumber and identified 
by Claim Key X+14.</t>

</section>
<section anchor="altacc-altitude-accuracy-claim" title="altacc (altitude accuracy) claim">

<t>The “altacc” (altitude accuracy) claim contains a value that describes
the altitude accuracy.  It is non-negative and expressed in meters.
It is of data type FloatOrNumber and identified 
by Claim Key X+15.</t>

</section>
<section anchor="heading-claim" title="heading claim">

<t>The “heading” claim contains a value that describes direction of
motion for the entity.  Its value is specified in degrees, between 0
and 360.  It is of data type FloatOrNumber and
identified by Claim Key X+16.</t>

</section>
<section anchor="speed-claim" title="speed claim">

<t>The “speed” claim contains a value that describes the velocity of the
entity in the horizontal direction.  Its value is specified in
meters/second and must be non-negative.  It is of data type FloatOrNumber 
and identified by Claim Key X+17.</t>

</section>
</section>
<section anchor="ts-timestamp-claim" title="ts (timestamp) claim">

<t>The “ts” (timestamp) claim contains a timestamp derived using the same
time reference as is used to generate an “iat” claim (see Section
3.1.6 of <xref target="RFC8392"/>).  It is of the same type as
“iat” (integer or floating-point), and is identified by Claim Key
X+18.  It is meant to designate the time at which a measurement was
taken, when a location was obtained, or when a token was actually
transmitted.  The timestamp would be included as a subclaim under the
“submod” or “loc” claims (in addition to the existing respective
subclaims), or at the device level.</t>

</section>
<section anchor="age-claim" title="age claim">

<t>The “age” claim contains a value that represents the number of seconds
that have elapsed since the token was created, measurement was made,
or location was obtained.  Typical attestable values are sent as soon
as they are obtained.  However in the case that such a value is
buffered and sent at a later time and a sufficiently accurate time
reference is unavailable for creation of a timestamp, then the age
claim is provided.  It is identified by Claim Key X+19.</t>

</section>
<section anchor="uptime-claim" title="uptime claim">

<t>The “uptime” claim contains a value that represents the number of
seconds that have elapsed since the entity or submod was last booted.  It is
identified by Claim Key X+20.</t>

</section>
<section anchor="the-submods-claim" title="The submods Claim">

<t>Some devices are complex, having many subsystems or submodules.  A
mobile phone is a good example. It may have several connectivity
submodules for communications (e.g., WiFi and cellular). It may have
sub systems for low-power audio and video playback. It may have one or
more security-oriented subsystems like a TEE or a Secure Element.</t>

<t>The claims for each these can be grouped together in a submodule.</t>

<t>Specifically, the “submods” claim is an array. Each item in the array
is a CBOR map containing all the claims for a particular submodule.
It is identified by Claim Key X+22.</t>

<t>The security level of the submod is assumed to be at the same level as
the main entity unless there is a security level claim in that
submodule indicating otherwise. The security level of a submodule can
never be higher (more secure) than the security level of the EAT it is
a part of.</t>

<section anchor="the-submodname-claim" title="The submod_name Claim">

<t>Each submodule should have a submod_name claim that is descriptive
name. This name should be the CBOR txt type.</t>

</section>
<section anchor="nested-eats-the-eat-claim" title="Nested EATs, the eat Claim">

<t>It is allowed for one EAT to be embedded in another. This is for
complex devices that have more than one subsystem capable of
generating an EAT. Typically one will be the device-wide EAT that is
low to medium security and another from a Secure Element or similar
that is high security.</t>

<t>The contents of the “eat” claim must be a fully signed, optionally
encrypted, EAT token. It is identified by Claim Key X+23.</t>

</section>
</section>
</section>
<section anchor="cbor-interoperability" title="CBOR Interoperability">
<t>EAT is a one-way protocol. It only defines a single message that goes from the entity to the server. The entity implementation will often be in a contained environment with little RAM and the server will usually not be. The following requirements for interoperability take that into account. The entity can generally use whatever encoding it wants. The server is required to support just about every encoding.</t>

<t>Canonical CBOR encoding is explicitly NOT required as it would place an unnecessary burden on the entity implementation.</t>

<section anchor="integer-encoding-major-type-0-and-1" title="Integer Encoding (major type 0 and 1)">
<t>The entity may use any integer encoding allowed by CBOR. The server MUST accept all integer encodings allowed by CBOR.</t>

</section>
<section anchor="string-encoding-major-type-2-and-3" title="String Encoding (major type 2 and 3)">
<t>The entity can use any string encoding allowed by CBOR including indefinite lengths. It may also encode the lengths of strings in any way allowed by CBOR. The server must accept all string encodings.</t>

<t>Major type 2, bstr, SHOULD be have tag 21, 22 or 23 to indicate conversion to base64 or such when converting to JSON.</t>

</section>
<section anchor="map-and-array-encoding-major-type-4-and-5" title="Map and Array Encoding (major type 4 and 5)">
<t>The entity can use any array or map encoding allowed by CBOR including indefinite lengths. Sorting of map keys is not required. Duplicate map keys are not allowed. The server must accept all array and map encodings. The server may reject maps with duplicate map keys.</t>

</section>
<section anchor="date-and-time" title="Date and Time">
<t>The entity should send dates as tag 1 encoded as 64-bit or 32-bit integers. The entity may not send floating point dates. The server must support tag 1 epoch based dates encoded as 64-bit or 32-bit integers.</t>

<t>The entity may send tag 0 dates, however tag 1 is preferred. The server must support tag 0 UTC dates.</t>

</section>
<section anchor="uris" title="URIs">
<t>URIs should be encoded as text strings and marked with tag 32.</t>

</section>
<section anchor="floating-point" title="Floating Point">
<t>Encoding data in floating point is to be used only if necessary. Location coordinates are always in floating point. The server must support decoding of all types of floating point.</t>

</section>
<section anchor="other-types" title="Other types">
<t>Use of Other types like bignums, regular expressions and so SHOULD NOT be used. The server MAY support them, but is not required to. Use of these tags is</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="reuse-of-cbor-web-token-cwt-claims-registry" title="Reuse of CBOR Web Token (CWT) Claims Registry">

<t>Claims defined for EAT are compatible with those of CWT
so the CWT Claims Registry is re used. New new IANA registry
is created. All EAT claims should be registered in the
CWT Claims Registry.</t>

<section anchor="claims-registered-by-this-document" title="Claims Registered by This Document">

<t><list style="symbols">
  <t>Claim Name: UEID</t>
  <t>Claim Description: The Universal Entity ID</t>
  <t>JWT Claim Name: N/A</t>
  <t>Claim Key: X</t>
  <t>Claim Value Type(s): byte string</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): <spanx style="strong">this document</spanx></t>
</list></t>

<t>TODO: add the rest of the claims in here</t>

</section>
</section>
<section anchor="eat-cbor-tag-registration" title="EAT CBOR Tag Registration">

<t>How an EAT consumer determines whether received CBOR-formatted data
actually represents a valid EAT is application-dependent, much like a
CWT.  For instance, a specific MIME type associated with the EAT such
as “application/eat” could be sufficient for identification of the
EAT.  Note however that EAT’s can include other EAT’s (e.g. a device
EAT comprised of several submodule EAT’s).  In this case, a CBOR tag
dedicated to the EAT will be required at least for the submodule EAT’s
and the tag must be a valid CBOR tag.  In other words - the EAT CBOR
tag can optionally prefix a device-level EAT, but a EAT CBOR tag must
always prefix a submodule EAT.  The proposed EAT CBOR tag is 71.</t>

<section anchor="tag-registered-by-this-document" title="Tag Registered by This Document">

<t><list style="symbols">
  <t>CBOR Tag: 71</t>
  <t>Data Item: Entity Attestation Token (EAT)</t>
  <t>Semantics: Entity Attestation Token (CWT), as defined in <spanx style="strong">this_doc</spanx></t>
  <t>Reference: <spanx style="strong">this_doc</spanx></t>
  <t>Point of Contact: Giridhar Mandyam, mandyam@qti.qualcomm.com</t>
</list></t>

</section>
</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>Certain EAT claims can be used to track the owner of an entity and
therefore implementations should consider providing privacy-preserving
options dependent on the intended usage of the EAT.  Examples would
include suppression of location claims for EAT’s provided to
unauthenticated consumers.</t>

<section anchor="privacyconsiderations" title="UEID Privacy Considerations">

<t>A UEID is usually not privacy preserving. Any set of relying parties
that receives tokens that happen to be from a single device will be
able to know the tokens are all from the same device and be able to
track the device. Thus, in many usage situations ueid violates
governmental privacy regulation. In other usage situations UEID will
not be allowed for certain products like browsers that give privacy
for the end user.  it will often be the case that tokens will not have
a UEID for these reasons.</t>

<t>There are several strategies that can be used to still be able to put
UEID’s in tokens:</t>

<t><list style="symbols">
  <t>The device obtains explicit permission from the user of the device
to use the UEID. This may be through a prompt. It may also be through
a license agreement.  For example, agreements for some online banking
and brokerage services might already cover use of a UEID.</t>
  <t>The UEID is used only in a particular context or particular use
case. It is used only by one relying party.</t>
  <t>The device authenticates the relying party and generates a derived
UEID just for that particular relying party.  For example, the relying
party could prove their identity cryptographically to the device, then
the device generates a UEID just for that relying party by hashing a
proofed relying party ID with the main device UEID.</t>
</list></t>

<t>Note that some of these privacy preservation strategies result in multiple UEIDs
per device. Each UEID is used in a different context, use case or system 
on the device. However, from the view of the relying party, there is just
one UEID and it is still globally universal across manufacturers.</t>

</section>
</section>
<section anchor="securitycons" title="Security Considerations">

<t>TODO: Perhaps this can be the same as CWT / COSE, but not sure yet
because it involves so much entity / device security that 
those do not.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC7049" target='https://www.rfc-editor.org/info/rfc7049'>
<front>
<title>Concise Binary Object Representation (CBOR)</title>
<author initials='C.' surname='Bormann' fullname='C. Bormann'><organization /></author>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'><organization /></author>
<date year='2013' month='October' />
<abstract><t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation.  These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t></abstract>
</front>
<seriesInfo name='RFC' value='7049'/>
<seriesInfo name='DOI' value='10.17487/RFC7049'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC8152" target='https://www.rfc-editor.org/info/rfc8152'>
<front>
<title>CBOR Object Signing and Encryption (COSE)</title>
<author initials='J.' surname='Schaad' fullname='J. Schaad'><organization /></author>
<date year='2017' month='July' />
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.</t></abstract>
</front>
<seriesInfo name='RFC' value='8152'/>
<seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>



<reference  anchor="RFC8392" target='https://www.rfc-editor.org/info/rfc8392'>
<front>
<title>CBOR Web Token (CWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='E.' surname='Wahlstroem' fullname='E. Wahlstroem'><organization /></author>
<author initials='S.' surname='Erdtman' fullname='S. Erdtman'><organization /></author>
<author initials='H.' surname='Tschofenig' fullname='H. Tschofenig'><organization /></author>
<date year='2018' month='May' />
<abstract><t>CBOR Web Token (CWT) is a compact means of representing claims to be transferred between two parties.  The claims in a CWT are encoded in the Concise Binary Object Representation (CBOR), and CBOR Object Signing and Encryption (COSE) is used for added application-layer security protection.  A claim is a piece of information asserted about a subject and is represented as a name/value pair consisting of a claim name and a claim value.  CWT is derived from JSON Web Token (JWT) but uses CBOR rather than JSON.</t></abstract>
</front>
<seriesInfo name='RFC' value='8392'/>
<seriesInfo name='DOI' value='10.17487/RFC8392'/>
</reference>


<reference anchor="TIME_T" target="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_15">
  <front>
    <title>Vol. 1: Base Definitions, Issue 7</title>
    <author >
      <organization>The Open Group Base Specifications</organization>
    </author>
    <date year="2013"/>
  </front>
  <seriesInfo name="Section 4.15" value="'Seconds Since the Epoch'"/>
  <seriesInfo name="IEEE Std" value="1003.1"/>
  <seriesInfo name="2013" value="Edition"/>
</reference>
<reference anchor="WGS84" target="http://earth-info.nga.mil/GandG/publications/tr8350.2/wgs84fin.pdf">
  <front>
    <title>National Imagery and Mapping Agency Technical Report 8350.2, Third Edition</title>
    <author >
      <organization>National Imagery and Mapping Agency</organization>
    </author>
    <date year="2000"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

<reference anchor="Webauthn" >
  <front>
    <title>Web Authentication: A Web API for accessing scoped credentials</title>
    <author >
      <organization>Worldwide Web Consortium</organization>
    </author>
    <date year="2016"/>
  </front>
</reference>
<reference anchor="ASN.1" >
  <front>
    <title>Information Technology -- ASN.1 encoding rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="1994"/>
  </front>
  <seriesInfo name="ITU-T" value="Recommendation X.690"/>
</reference>
<reference anchor="IDevID" target="http://standards.ieee.org/findstds/standard/802.1AR-2009.html">
  <front>
    <title>IEEE Standard, "IEEE 802.1AR Secure Device Identifier"</title>
    <author >
      <organization></organization>
    </author>
    <date year="2009" month="December"/>
  </front>
</reference>


    </references>


<section anchor="examples" title="Examples">

<section anchor="very-simple-eat" title="Very Simple EAT">

<t>This is shown in CBOR diagnostic form. Only the payload signed by COSE
is shown.</t>

<figure><artwork><![CDATA[
{
   / nonce /                 11:h'948f8860d13a463e8e', 
   / UEID /                   8:h'0198f50a4ff6c05861c8860d13a638ea4fe2f',
   / secbootenabled /        13:true,
   / debugpermanentdisable / 15:true,
   / ts /                    21:1526542894,
}
]]></artwork></figure>

</section>
<section anchor="example-with-submodules-nesting-and-security-levels" title="Example with Submodules, Nesting and Security Levels">

<figure><artwork><![CDATA[
{
   / nonce /                 11:h'948f8860d13a463e8e', 
   / UEID /                   8:h'0198f50a4ff6c05861c8860d13a638ea4fe2f',
   / secbootenabled /        13:true,
   / debugpermanentdisable / 15:true,
   / ts /                    21:1526542894,
   / seclevel /              10:3, / secure restriced OS / 
   
   / submods / 30: 
      [
         / 1st submod, an Android Application / {
           / submod_name /   30:'Android App "Foo"',
           / seclevel /      10:1, / unrestricted / 
           / app data /  -70000:'text string'
         },
         / 2nd submod, A nested EAT from a secure element / {
           / submod_name / 30:'Secure Element EAT',
           / eat /         31:71( 18(
              / an embedded EAT / [ /...COSE_Sign1 bytes with payload.../ ]
                           ))
         }
         / 3rd submod, information about Linux Android / {
            / submod_name/ 30:'Linux Android',
            / seclevel /   10:1, / unrestricted /
            / custom - release / -80000:'8.0.0',
            / custom - version / -80001:'4.9.51+'
         }
      ]
}
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIALIMD10AA+1963LbSJLu/3qKCvmHpBmSEiXZlhRxIlYtyd2asSyvJY9n
Y2PDAQJFCmMQ4ACgZE5Pb+yDnPNy+yQnv8ysQoGU7J7LxvlzHHMRcanKysrK
eyaGw6Fp2qTMPidFVbpT29ZLZ/JFzX817cH+/sn+gUmT9tQ2bWayKi2TOT2X
1cm0HeaunQ7rpG2GLmmH+/vmcXZqP5zd3dpPVf0lL2f2x7paLswLm1Zl48pm
2Zza7ZVrtulSs5zM86bJq7JdLWjIq8u7N2aRnxpr2yr1z/GPzC3ae7pyhN9N
Vbe1mzbdE81q3r+QVvNFkrbRE8tJd62scKmepi5r2lXh/GNt3uLH3b2zlyX9
WNmztnWEnpZgtHfVF1fancuzu12TTCa1ezi19MMktUsI+LJ1dela8+WRMJXP
Siw+iV5PJ1VNi86SlqY42B8fDsf7Jlm291V9aoY2Lwn8H0f2mvZilcwJPsHz
j3mdZ/dJHd2oakLyvy6TglY0t3cuvS+roprlriEo0hFWS/hxtNKXr1+/tNdV
7e6rZePsRZ0/OGCHlnZqb5PSXuRuVgEXbkYwntrzpMinVV3mCSNxWbY1Pfnx
9ox+Lu6ZQLZ+O7bHL4/tq5dj+5rIY4tuuXmSF6d2LiD+y5/bfPRnhW9E/+OX
93Zk3y7LbFIkmQsLfJssa1emrneLl3jr0mWNXaANqeqVffv2vJurmBX/kjcF
zTisHSginuh6ZH9IioJw7+qqCVNd57OlK9Zu/b/FZoTMo4OTkwiXE4HyWWT+
bmRvti+qsprdLzts/s7Vbr7q3/n1Kzx4fWLfJHVJpFotZ/f2Q5VkYYXRDV5O
Bur8OD6yr9/e9tZX5q3L7O/pAGTVPFrq0ZEdH7w8sIevDsfH0VL/VGUM7OZS
TVnVczo+Dw5M4cOb84Px+ET/fL1/FP58Ga4ej18fhT9fHvg/D0/4z7ur68vP
d/iLuEpSz7Dm+7ZdnO7tLZaTZlQtXDkDwxoRzvaqsshLhxt7J69OTk7GJ69P
TvYmSeMyYjZ7fxh/Tu+Txf7R6L6dFy/aZPZ5/+jz+KWMLqxk+w9VMbLjU6I5
UIyb5oQcoo1mYK+aZuns621+3PMB/D2UDQMXuiF4hIPKALcLl+bTPGWO0vDT
HT/hn42raV/zclrJYBaniPnP0Wj8kk7vNv2uyqyxtzkOXQtet6jS++0tff7q
8vLS3rYZAT/e3z8cjbf1xjYm2Sael/ESDF3+9OPt8dGT6HRJ3d4PAceonCWj
eV7s/Uhn9UfgufAL2Gvr48OX+6ODvcdZc3xEyBktsmmMv3f8YFLYq3kyc8QD
aAzihIsFuOvZjPjGSgiahizsB7cgRmBlzAFhMK+zAO4zaP4VM/TwTDLOYFkR
XX5yEwxcnvZ2nq7aM7rsSJLIek/tmeWr768sDWCTNHUk/mieJiXKy2xaE2XR
40nRPEsWJFeL7DHPHA91TlikJefLeZ8YXmF3zm7fjcZ9oK485JBnnhGs7HAo
D1tabpUBonpJzOe0T3C2moIM81QJ4tI//AEP250fLj/sDojplZVsx/r9c7rP
6L3Im5auL/PmnlbtH9NR9eELevhZJIiw9Tt35woHlrEsPaDEgnTHBSPjk5Oj
Z47H1d3H4R3pLDyCKzMZ4I+jVyf7wOHVhXu4uughUQ8ILSSps4Hd4t/H+wej
8dkHkVk46Q85na4r3s5p7uqtCJoLl7r5xNWgppOnDk+jgzej3DnHvIjOBukq
WRPu7emMQwzCHMiYIe1jMiFmTmqOMWdlT/+QjbfMviz0kapMc+Ipk7xMiOyr
yZ+IUZDoWpA4Jaj5JbNz/sMNbVre2EVdLSq82t7TKHShWeZtMikckzLxkmIJ
TY7+sonFW0yfrDPRKJ/uiDK+lNWjTRrhOd/Ur0aW2V/SNFWaE85I70zaxKYk
YyfOLgHGhE4qQVusQGAL4jYr0hPxBh0pnqHx2gPGd6DdxJBsrOjvTHaH4J5X
GZHbSFBX0r3PdKLaOp8sQaDG3P1wYeTmPM+ywhnS4Ij4anotFSb4oTdkjHDC
0ZRUGhLLhM0CpMePMP5ItlePDa8Arxt9vVmm98BQQoBNcsIti84BHZqgXw6r
6ZAYWzmjM3JV3e3qzANajalo3TWd4WxR5WULfNCuPTibt40rpoyfPspoZIaL
3gI/8jAy+vPGKJTA5gameTObau4sCUEQHJ0sOtUpAT+pli2/JKAZHPmM+Ajx
rMd7xzDmrZgXTfTcKCBzDYvJ83gERdA9Vxc57SeGNrRkMhiqomFWo0838njp
QMAKfAcng/JIfJTwCvKppqYDiyiOKNwBlSm9Tkggxat0dlZVmXVfk/mC9omg
nOSEDCKdlJX6jutjzbUI2vAIacptik3Ei6T8OBzICBOgftNHOUBvAuy8mghG
Ggaj+LOJZ0o8nFXmiUnTqq7psBcr2uizUqmmWwlxhpbgx4pbUR5Mt4Y+VI9J
2cZQBYAe86LwA+A6H2ClK0tS1dWkG//FNbzwChCR6MY5daDzBdGS37N5Prtv
eSJ60HSrT6K1dxu48tvFtKuL1aGZh9BkEyJJFr3CRvKWKA/shjChUi4mQF45
zVGARzNNzZOVMLyMjh1xCtyld02Rz1nzpSmAiWmlIJySIPmNfV9XNDL9B/fm
yRcdi9Towl/VBdF5yh7JqrQ7P33a/dteZSIlrlkPeIPydElgF6zBgE0HnliR
GCwBKxHEosEc1y5pSHLhkPkxm2raChy3n3ZJIyjZpu1RKt4kjjklw6oWdPGh
8xy3/+Bl+ZDXVanneJ1t9BfiOSGxLvvj+1tbVHKaZKdq9+dlTsqSbKlKtobM
siKDgFD6sotlDZnFMLmvRNNNDoHVVEYOivAPopsvpIuRNdjAgl1BvtANIkBP
r/SfR6Islmo7jXP255/VAPnll11rHgnO9J4mKr10U4ggN3Iw+9ol2co0ywX0
U2b7OS2vcYxqIcvVwjUDhhS8hM4kQQxR3JCSicumWwCBdQX+mZRk/xKh2kdH
h42o7ne3N+94n5k35ThJpFfqxjzm7b15JJncBr1vhHH4wLNnhGcPGKFXHqAP
N3M6SpZEjYmYk19h0Ar8KZGnXcnmo55TPReGhmMVQcV4Dn4zFzIkrWEBvSmQ
/kwWRjDT0eooMWkhlAgBMMNJtBGdA9/xeWV0gq3C2JKh/ZYA22mR5PPGeE7J
dE6iBTvX11ostJaBDdsNG5K2e2SNpwk+jcQzHoKCJZPilHxLxxnYfERoJEWH
GI958cI/ePMAYeUeWXXbcnxxy2MLhNnpLeGUTKDxzCfFyu5swZ/G+szWLqPe
4FU5Cy0rARZSoSdc+7ihxwEUK18mfq47Wmm9WrTVrE4W99DxaV4CmjRc1gSJ
mfK6z+4M3H3LuatHJGBwwfbk1bBwD8S7dGkgPyYiAqGhG3R0TVgLXt5uhOSh
CzQYVrVQ4ETQ1GkDZENhtbIUk1VERU0FyOaOzguvkoDIIJxpGGKsrFGxALE7
H0ihoj25Js5alwpr84xWRrT64IRhZPl0SvRPnNN9JQ7LfMp1zI5mlVNIdMEU
3T0fGDIjhJb5popEcWvkcM6VutYAoBPPMNBa//u//jeZrM1//9f/sdHEghVi
3KTKlREQzapp3dzu3NwKoVhiXsyWaFbYWgmzJSKWokoy3lkMztwCso/MUz+z
uSPbZ+cO2IMl51cfs/rdoJVkbPalLdF/U4FzZczwjMzuUTEMsom0vlRMPMZQ
/sU9q2QRmWVi5zNN5gKox467JSBhcmW082qimUthPrtkUyb2npSMbjMgFHWn
3JSYLtFAMkvykkjkp084QEn6pemOGGvQQiBEQF5oPGERKNPs1Go9ZF6QsW5C
xuBsRleYdfbpw07rak6iCMKDiIMQNSPjrWVBdeWPejEQXpE3dBSgUIVN2aCM
+4QJI1crlXd6bcZwREn00KEAXKWeOWVeHxsW9cw8IUDOb24vjXnTaewFTieO
7iYmWLmPGEgkzr1sSizxkqJQJ5YXlyRP5k136AlCuNzVLOzzuC+OzBxa6T2R
G0yRPZywkvmYy6AAk21L+q93k73GHBHDZwFjBEZV6Oc4JCynlX+SoCClwbN9
xsSNmNO3PhBAiDGXMiuG2AGWdnUk8cF0igUcl5A0xtCmJkrXA9W+oUEwdaxJ
vNRz6Iw2vZ6z6AMJC4imEb9ExwNiYiCMPNKek34BEqTDw3SGjf7KfpaCjym0
keU8gawp2MjWU68ceM2CAUG6nE0L6FICvmmqZZ0G1TCsBiswc7Bg6AUxOapI
6VkdrK5/g6CwEwW/wy46grdhXcPTyJygT2YEoxESy5zekPNHLMqbDKxEVczk
1bjuW5fM/eUGq2Os3nWyCnzSD25YijDFygu3n3gIcFamYdpoLDWvWUorP2A7
VOG13Qh5N77nIF6VIFF7EzYZgqxoSJ9oacuSpu3bJfSrJpoTQyFfsCnnvhKT
ZicOqXEYLFCMYXuDVncLo78jJLmsvDYw4d6oI/W10T/TBddG5tTGqpT6OvAn
aZvBryG+nJJtGv57ORkGpaeqI7yua4JwfhAx4Zh2Xk+2+tXgu07K5ZQUXzoZ
tUAjygh2VWzPJBOrVzmesnbIFqhkIigeXJkBuMSkeZ0uaW8mFamx6lvS2+Jf
8X9PLdRE9n56RQnQwqnUKGwflOLfM8VbhU6cNYPgBKHB1gD+QutdNuGIxUvP
S6PqWeT7CLz8SvZ8fWMHanR2mBK8QpNvxAFEvIUkTYx6Q0wX7gbimkQKO2e/
v96Vk9TNaDMSM5gljMyeFUUw2/xgZnzZbIDAahxjn8XkNJnUnjvTMzkrDDt0
dZeVZZmJUA5OFkgHDsF17PM2AZn5HLgjENpH58qR3WA4vRXmjTglp6BHZfmE
ZhD+83gNto4KpWDkKCdVPIlCa0Sh9duq7I6IO63zibdy2JmULsHTxUrDG8wo
HpNVYzoRuX5SeosJ29s9O+8dlG+TSt9BxEydqN4uF+wjErZDihMfZQIoaZfd
khXeB9L4MrFGoXc07I0SfYwVBEgnseNUAhtvtuTCS++Jqzo2b9b0c+BhZH+C
sQpMM/mquo2D95sYa8zR5xCLwaXTF0P2bmO5M9c2HAutSVguqpLDH/3D4EZE
5glbHjZ1dSt6hduVZW1gm20xuzYNIR4UIHwz1k3+CWtAwoW+1YRNYddxTwkK
HIhR6ymFXt6A3nuYiUcs61Jhxg6zgJV9jCXEswvIcvFaPg/NAJihzee4PlPn
0zSMY65Pisaowl1QctXS6zK861Ag8v6Le3oBNnlI8oJVFsHz+p4F64nU6hIH
Jp8KXB0hMzU+JhKCrN0QxwO7oQDs8AlIYutRWQ0R2K5Xinx8yHbeJjiH7l3z
hNBmzzxMZEIAnXsydmrD3mjsF+ZlvHhVnJQoGlAcsX544ToPCdls0AGnZmMO
elYNE9o5Zc7sjXWLolqx/gkwsKfQS4SHslhB7BEO/9SVNH7ViN99/TJ0e5CD
bEhEDMHHQ+aza/O/wNyck6nJliTB8hRvY7VVyQESfVHnD0m6Ak/8ugo0r17W
iDjU6Sx6Wf/QmScOHU2ygsT0EzWrufrovydW+N1W+FzjNglbPTXKIDb4w8BM
XJosG/EnEVQu6XSF3tyPPA6hmM3/WJ3zCu99IrzXe2Aq73sR9q3SRsQg66af
dD/eEbH5+Cm2BTdf2DvBGueDwePNarYBZw8KV4xYPraroI/3PCcsiFZBizAJ
2/156Z3A0BJyV2TsDlrT6+HRL7PCq/5JaX66u3tv7x2pgjWibPZPEGkxKER/
0xwCRATQtCAleiI6SN6YnIMpohQHIp/UFcYjhblaiP/iiVftomrEY+03jX1h
hiWXK6ZDMerEzgvMYAenSd9cRRo5/WAXsOusULY/CLYhGWJFQjyEOW8bb4TH
i8Y4Os87LWW6LKYI82AfunlM8CDos+wCIxLABkHgJXlwrQ2YnYGrQ9KXaoJj
tzGX2CKqgon9SAgYiqqGpXoXS8mW07rKTAeFbQN25Q/CUTWdM1PjU9hCde/M
iXTTvFo2mpwhGFF9Gja7Om8MR1Mi4z7Cqp4mVknu4Bdn1sBsP59Gag6Uzwe3
YmempFuxx37ushzstOmtPFpqb5kDsX/W3iQdiBGYNDlteyRsMPMiWcGvx6pu
0QqjN0EVk7P6IngubtN72kGxSTCH3fLLbvjOVuBSRBEsQbyioV5G4cISLmuI
+rIh1EFloUAWtNBJQdYQD/pE5mSfJ8bK8SBo27o4iaAwx2Mc5e0otijy8qEq
HoTTXV2w/DN/HL3cP4k1MUSmcriKa5bIrcI1J/Fec7gvCGA9L4QVE7CSFLOK
qP9+viXYaJRfCE7CXZo+eI/gMAtIbesls/IRsckohmc3xrcRBcpWwFsczudE
vW5eHxCzUvVeMfznOIkhCuPD7c2SCCgjuSdozeGUzuumHXgfUlmVwwf4b+GJ
btqqZt/EIkldf3PYZf2EpWHCXipbh/MVTiUJEwUdDjirSvAwO3WP9p7YMi+M
9FLiw6UqCT46JZHMkZX0NjnukIpIHE0h9YnSgmWjSpOJqcol4BUwKbv4SgTg
QLisaG/E9fKGJzKk45BNwfwP+JJt9hOKjTqSTDRamGgTQ06xqR8iejeyg414
uS/PL87O7M4lzUIsJbXnSziYL4RRnhH+V3OwqCiwtMvbauALIBHChwAMoJej
A0R1oU2SrLSUdsmCgVHpo0BNEM1JzM/6tKaoMZ7eescsreZuM7YkgjbopxLB
yTipwfRsV5ayj/fC+SSsmJKiAlcHMcx6xtnCEF+6++WSs6lI+ezD2PRPQEgf
WrDizozO3rGvlD2wwuPAGh6rmsDauv54e7c1kP+372747w+X//rx6sPlBf6+
/ens7dvwhzxh6MfNx7d6H391b57fXF9fvruQl+mqXbt0ffZvWxIR2bp5f3d1
8+7s7daGYS/nVx2VnCrhVAeJnQHmh/P3dnwk/mQkzf7yi/ctvz6iv4Fd4ZV8
wuQnK02wnJNaPYAmTRZEQdCKaAISnI+SD+GNjQBU7ZasDnfYFHP2d5/uNFj+
EjAMhNlFXm4B4tw/Jj53Gv62hc/mpv744cp75raia1siizxyml6a4n0SxXUR
9sMBSzqhE/IbfbgeUD4xehdBNj46cBCiA35B7mvqFm3slg0pdLItkg1nWtI9
wd1ZKpGq4ZJMOAQH7aO7tPh3cEnl6QWRaVh8dO1/YPGbo/9TF1/K8Jz/aHeY
MsKgo6PRuBtYcyo2MGTkkGtiYEhTZesug6GeIcwb3MDELoQfJzM7NjsOGc5D
SX0EDHvw7+1aPth0kCpR5Anz5zDG7TvCnUf8/ZLsqyESOJiRIss+qDsaqYCE
Yis+DPB7t/LvczRoniyYsXz3xT8kxdJtvPqAqx1qvb4jl5U9h3FoO8/FpXDr
2o2hJGRWlS2rOJH/ISijahbTONDZSVNsb+p3gnxPi72r36RGde0ju8WIPORl
estcA0SaMEpGS46ADTO2Gayt0s2S+IohwTDF5GxLc5KjpwsEOTo1gzbAXvf8
zx74njLp9wNyI/J1fYHH92qqJI38PBMs9GBI2Z+uz86ZaerKNfYkkabYoB+Z
3ljy9uU5vRwyC0rJKuZkYzoJknWswUcZ3vgoCXSIVqI2wdQ452UtkrxmuEV/
MKqYD8TnyCzcp85elmS9p/T3e3VwXF34rJT3Vxe7Mm0eMmR6SDNIRRSvhMyk
khREI8k1HBYuc+T7cBo4a4O0sJ2PlxicnzIGP7ab7izkZUZKZ7ZkxTC4NDS+
CKtmbzMjw6zlydpHQIm4Kvtv7A90QtoK2VREl8kXn+daOmQLfkFULsT86WDX
icTuOMHPg+UV2jrOG05sl6BCP5GuIuYO+8rgUjPQv7pBJL1LXWIwhAtOVeaA
tiyqCxt+yTkOm5hGEC4kDloQK7HtfHYcdRNtoCFNTIoHcBjUY+fzz3nTA2+y
f7Q7f8T9ux8u4DjUnfAB2KXfukJckbOimvAPukFzRLlywe/UGPHWowQox1ow
pI7IYUoZNnp7LU2XkdcMDIQSzl/Deg77TrIQmQ0pHJuO/d5wRodjG4p2OsTW
4KrgVNaB2uOlFZW5hUMwjGaIFJcNr0RCgOCJNEw3XW/tzPvi2yZChHobZKO8
XAZ27I54A1a8Umym4JkXELYg8FX4hflUxq5EAEhGgfPGGpnbnHirZGFQCfBF
PVzfzrdECq9zi3DCfK6O8U6I3oqRBcfaMi8kcqiQJEhKtoyvQkJmiZQuTF/O
1BCxM1pd6ZPe90J0tZfukHcDVEyWkH/IPJsjBwHRe0+3wJ9WMUxWrRuKHtXY
HSQsFK1oXDhOsBZgguR/ceq+7NQurMl+AoLphvr/+L6oDSZyEPKmdYvG/eGr
I1FKWIuI4IJnnBWHwpUzYkPqw58nX/P5ci6g0E4cHjLoBPNYhCV+8ck4ePmK
TV4C70z3GiTHwpRPigyp5y2B1+1PPuda7ud4lDfKZzGr89ZPuoZKoDukRHBS
oxiesB3pILBC1HiZQuJIFJJKgsup+pN9dvbuAHpZWTEqwdr7BSZRoibh7SyA
mTBkXiO2b3xozMdrCVRkStod71wXz/qu5sxViwSsxqePCmrpUIi3bhViCKof
09Sf1NwMUVeaiF0xIgABl/oU4AsR6BhO7Jb3QJoutUKmxAu0IHGEQDWlh0co
yeMkR5EKjHP2Kkq4IEk5449V5Y7hRByJgzZPcCJmCj4yYTSmgpNmxcfMDpXk
ocozuAA5Iu5ouGnklhWAyJDuxRRQzoqiIh6EcPVXe4dF/wAc6N/QmOnvfrnY
X+nJ/a/7Y7rx40dCw19DukdixwfHAEep29YELm2xWvI+ZxXWqTo94Wfqknnj
TGQeWh01YddAuaAZHD+4SoIgrJt+opLmbSWcIRYyDiGhNYeQRhUHHggteexD
OvJrPKDFsQZ3+fHKr3MjF4Mf8OkaHiLFleJ4JfmyNEiuome50MzcG7oITND/
Dw9fiRJyDqrsaEEG4XDs+jS0cDG12dWjopjY9dAXUYTnRpheqLKatnoqfIo0
+xzFE0q7RwowGHbNFDeyO+9QvMOE/ngPrcwLEz6Hc7Bi6MaqfIn7gojMNV2y
ZnioN/SgcwSxuwJKNHMKkSbKaezdzcXNqQ0lw+J/hbOIKR/YH+l2HWK7ri+v
+iR5NMzyWd5GuPD5B8zgeBeOrTzDVH9W+LIEe06sX+IphKCv+lBPf+Mznj4X
kR5oWqe4kibOSxMxolW6qRUk4dmjY5YLcgh4MWIP+heDU8o73+3b5T3pO/cu
/UI8FFt5+4d3cYKQx84RoYVoYEgzxPg5Oh5O+tjBm7IcFBPS0sokGKcHR/w0
qFZlnl6J3icVuJeSUtUz4seNYJTpaLGsSXGQskOHwcKJe6lAvtrvAflq/x8D
8vDVPxPIVx7Ioz6QG5j424A82ljk3wnkz6f2xdLl2ZAZ/1B8xVzm+r+2+ICd
c2p+LrULeGbrF1H8QuLUzkbkbVfkf6watggM+2tM0ZHaLcLaqG+M3hXZ6X3Y
Wu+08pwUaSl5qXmpUbjkTVUbnzkfa2gYY6mhcuDQG84qupl5M1wke3tG33rC
WSx4rtQ/FU+kkxhM0ndzeF8a2X6OzQ+fdpM0EMuiHuTMc0+RwCPKnAhjsMYH
HP5p7YAtFmtggD3wNO5QkpLFKUDvSDfywjzSDbmAw7H3u1dp0OHiSHBBDxsb
Pd6VDbP8EIviWSVB/e8MyYWPpMQGU1/lCbaBXxoDo4BjW2yIHhAdcGoe4x01
gf11SNifFopyafmVJiUnA9FrovYjw7avNNGZaehkSW2kZGEpNsaMWOjjVgiF
5uLlsHGmzkgOo0Wxbq9g9NCTN5zJQ/Qgu7FmZotAhiL+4oW90bx+ThSvuh+7
wb8iiW5MY97rr96hBBk/fdOO891DkQxnD/CuRmHTkb1hUZ+3Yj8i14KdBjAf
NZ+pG42DZJtpXlFeMfMRqJ6N6aXYnUJ5VF3xggFfBE3xLJ27IcpJ/urzv4RO
OmVQlT88Iz0BXEgS5AJEYX9bGGgrGvL99TeHTCye6HmcnhjlbV4uvw5/jxLs
4jvD8aNkTfOjEWysfRHqFs/AefY9MDXf/myx8B007M7d2W6HjDCq8mgmkDWn
fN8P9NuxT+5iku9FXYzoU770g6uPatexXISK6gpR0646mN3jPh+DRmEzRI8u
+3NIJyIahW0jGThhGiZpKXKumV3OvRshlzTjR5ZiCfLIHGfScKi6llUaGhme
77wMwYj+wRAcdZViytbYOc3+Xjl5l9frijnhi/V24uq9cxeEb9NVIuN1FcD+
nRHJRtVC4W3j5MJ1+3bTsw8RguxjUfs4hEo/veKMV01VY092wh6RXQpmQGZc
Ie6Zc7YAcl9GLep1VavnA2zWwxjbDaxh8A2RamaRw4NUyq4uNMEDA/qQsnDU
4MQ0prMCwlIa9bShkI2TzxpNKQOrgqp/Jqq+RpF1S1Xbj6zuvGNukYGgWx7J
brPJnbAmA1YtkY8kWFw+TaFh8hQtnJ2LaUBgSH5rXcgyfuJsmd7Zwm4zUYU2
Vm+5omqncSnXVgVHOB94qZ+IFQfOCSpWkePuLy7ul+AdZ4DQJJo1hpp/1Kx1
KU2+XI3GlaqyNFmo4IvC+obLpAgVM66Z15zWkl/wVzmVL6ixHMqgFXswTah9
nVbLer2ysR+gnjiSFN1QalIanzi09upaJe81ETnngd9qnqdM3Cm/b1DpIq1X
UFXLXZzszpuri5tdmGw5Ih/+5AQbURJoQQW6eA9tB05cMhXc3Ui74sr5xnQp
wCGDH8lODMUeDYuyxtAfASzTPJEdQxCB3QYmqtCEWj/xvMYU+KyT/7cHQvpi
F4LrlMabkN6tO+aJjmR7BM2yOcaM0RboY0nwIJAFbikhNC30Frm+cGkbWRkh
mwgZHKRJmKgFRG+lUepyI7XBcE5iv0kXgbx4zBsXylVCJU9ZeZ/ddFl0O4Oq
4BrbygzogOD+EKAmoC/9MelNtOZe1iTloTYNME+WynlmivyeqeOEuSgatViE
qlkfgiC73k2Q7vnYsOJbZtYn6WhQIn/gFXRCnWRiPxAELGhfoW5ZugauGuQd
22XerWU9Zq3TgxbJXqoeFlwCif2Uv8ltCF+hQlKyqTgcxpk4UnzVNWk5BF1s
wPM8mjkINHdOiIDOFJ2ZpKO2lcXJZF8KmQMmWmFXx3YZ78Dmyd1cF+mI24Lt
kFkljj4aB25ozW3SlACPrBHpbl9EkWGYAhJnVVIMOpz215dHvFV4Lxd6oyeD
58HsdR82aVI446X4nvb+6Ri0PhzZmcYcAdk/aaXQd3DsF4/dRJo+fE9awEwC
Qkdf3K8a7s4FswBltRzT/gYQ2j0oEKUW4HPyddVKxFFfJ76C9BMRMKpdRYmr
yL8yWd5oCZbj7MxLX+zud+79tWycUpiWaTejdbbH8VUfH0xEoi+KJBUbTDyD
C+5/wXxY25B08d6Q8NkZrN1RbtHOozN631y9v92kO8OKQ+/Bc9FxzpnI8+Qp
WgVHNrIKdvB2DLVwnOzIqd3RA76rgoozFQRVjeIy6Bfv2Em+U+L/gk7BeRp8
aQt+Wb4lYwaFhVEm3myREHE5NRIFTIgXSH64JxKvAz36CBixZrZiO4OlSyKJ
OkHIW0EarQV3E1bgVelClxDRhMT45FRwHCtkK8mdz58/X529O6ML9JdH9DT/
KscixjijnHERqMc8LzQPI63N2R9QpsU969xkCUbE8v2WK1i6bIf+4/JQxpre
pMIZ4d/9venfo016YoQnt4zeKkgEmmjPkDmRSsMU7a+lqbqYgfNsFCLNt+HD
UZrNrIYyTsIIGQ7ITOAEFskNbPq9PAxzoDgRRjptMGTPwOFthzAFHe/b6FF5
ThQt3yktHqqQ6gnQZ9cGgg63r6D0vYp0vWw+P528sahzgYU9FyY0SxjZX6tk
HY2EAoRALoi9yeZn+J3pz/7e927R1vdf/dauy+kxz+w6jwv2K9ZArsFFP5Pu
u3qDzA7n+4Qksm10ft7GcRFw9C3eBG5D0nWAQCsAdng1xOZCwy0/8NrToQMR
ElPW7LvnsfryaaxK01I+I30EN7gxAXF8A9XyED2zgfNoYEW/eR79zx26TfQb
nwKvmHl0Pr7u5wVplivO7mDohL77W2O6rfm1RPmqh773Pi3Dr1eRF9I1FJwn
ULf+SMDcxpibZGv+brx5m9zXloGKAyScqeNP2XM03Ika4xuEOK7CkEckKSmf
dh6GNW9tHJH3XIvhlI5vat1BTNaqjHx7d0y8O697u/NmSZzwuS0iM6f4Fdv0
1GNhq56e4H+Szv++/VKRlrJ7qlhtbhrtV1lpCXTK/Ea6xgAe8xT9hMyiG41k
i78h7jxGB2eibuvETDnGVIbeAujg2XT1VJyEpJkIrE7gzXJ947+hWxxrJeRb
HzbeKaq0v510YYsvq8s/kJMkyQ4lWsu5ERNN9IkaATRsMoeodD8Q4MtyuiZC
61Z51FHoexmEvx3vh4xFKG3o2JgZCZIndZ1Ig4WuHwga8Eet1wLVCQwp5wYF
uNOqqjMBhHBB11rutVhU5Yz/ZLdyUsh1r+E98bbv9sYxj7VWApiX+1fHz2vN
2s8/851ffuGCYNMlpSVhHeqT8G40QmE+Z9U3SUlPQUqtIj90LpxHHRZ7aU9g
BbTIbqX+aCpFJJBXa/f6Ody9THDd7TBvvxkBN/hBHpgMFy0+bGfck9D2cr2t
kQ6FzxPF2K+nQilq2LC1FdHlrc27//Ca/Hh/66K+s6YDXRMRnN0JVNdbEV3d
2rj3j67HDxcTKJJGg59x16/OfGN131ncoV9cmtIClHbXFpeCJa3d6xaXxNLi
GUbkXw7bgSLCkN0v/Tm526Um9yJ/uwkNmn796sz68o66vZMVepw+s1R+bOv5
537Vsjde/tuW/Y+v2mvP91oGEy9Rr239uvVo8qcIEzOvQqfLWLrS4iK7XitA
ZEmZm9UOGVze4bzPp+3w1f6vOZlIhf4G7Xotl2b0jTi8dY0rv3aJfDod0Sr7
S6ex4qkhB4QO/1Jx29qAj28t28hO7kmNqLQO0eT6mAL+GczptaoUcIwiNYJE
+XzRJ+q22dq8F2Ml3COk4KMmWdTNDpl/hnMugkuF+/J2Rd+hwyhJ/q0cwkom
YNe0lnmZw9F49Gqttd5uvH4/lybUNkaG2gk5b13lz5Arf3ZDt9xnsGMIO8dh
CjglWgmPSa27+Hl5ZZKwmHJidiSkHwmKNuGGrVyNmnT8DC1/qwnwh/oaX64a
MrLhjkylttZEnSJUUenQ3XnQxPupjsygY3Brc6ZHbe66hblER9TA0E7eJc37
YEHwlkGmYAMenAn61y7D228fLoEXpiMUc/c44sx9+xxF9gNnAPhiXCvEr/oe
hzddkSzY3x4+PdLhSyPyg/UdYB/oAK7WJ5EPlK4W3oUtrQRU1orzg3VMFK9W
RIVS8ij2STTCT2TpPYifqPU57OK+YndwOONmstRuR9JaHiNzg2MuOhJSkhRQ
ei5PczF+RAi0su+mO0U4QmUXM+Q8bM7L0R7kHZ0E55rD9phgEmhYLAtE/g0+
cSLbu1wwmPEOy6W/b5ONbrL91iYrL0UoiYmYN7BAkJY9oAH8b7D6g30BHwDL
II23mrgdoc80FkWf42sDn/DPwfwQ4Wo6ONjvaO1Zr4hMTK24uX/o3MTL0wbF
oV8Jonddt2JNp48/RhJKJTjSxnEQVxTo6bDbGxmD+DooHoVsS+J0jxCDyyyv
pLMFoYgs4CJZITWrDxk3bqqNJOlsNNONEMA9BhLOo2JvaD/SMoqShwQQ7owg
GRLqS+FvJDH3n7nOw9o5jGlXfCUAsUApnFAO1mxFJq2aiiN7mXBLWzf3Z5Cv
m2D2cu2qkqZ0wSji6LhGe6JuGR0o3zsZBwe64rXOt14mCclGkS8NV7SdyJIX
kkb7FObBE7osC/0cSa2Etd5eV1Ah0fOo6bU6XTgh1kfDfTO1dShjdzayHaXe
SttWIEeoowi3a33bpmeWy61p+DCGBB1Vsrqj95mzvHzyCnauAyAud0t6z6+n
xGr2HxE+bqu/nZ/sSqs4hoTtb79q8YzA8k6aJiMhRYgL6cUKkO+9Ku47UAYO
hjaxWysi1LTSLhMFnbZ8fN7zlOfSp8KJEldYwa5aVYak0Eh7AIl80rqFkF8Z
pO+Qv+bEAApyDDpEoe2sy3LUiIWwM6uSkk0nHXrXjm5UnhGan/U6W49C8nbL
vFw3fct1WpvXU/HRFW4NwnnlA60hYo0mdE8e9Oqlv3fO2NKU7bwKnyaQtCXj
G1UCRUM4w7u+XleteAPFXxL19/VtcXmlM1TEhg6KPt/V5xOh/+BIOweIXt/v
esObItUurIxxgnop+kEv7Yc9RwRxS/N/OLsOWTra4pDHWTbSVEU8huu5sXFT
LP10Uh8XFiqnd70iwpVynlEP/K6xPycPN8gnIg3jgWPdvjWCfDSl6fVgzKMO
QVETP65wkp6wjj/64EdBQ4HwPS/eurj1AhmvaJcFJQd1JmFk/m6HKrcckrf8
mR6Sl9gylGkua6KTtUan/T0ReX+l2n/4lNjOPPkTrE9O0Gb0j3dNhBlIQ9/e
zpsOAWTPFCbyLY8eZrgXBJp+LTjmuPFys/G2hIklg/NJ+A4YvsMefPzBIoVP
sz+fA0+NAilflRy31teRrjXjl5ofcTfKfWnkI3WwUYzpWxiQYu0OA2vgIQPj
OlocmfT0xMBql5uJfhABHTcOxgN7wMnyB4fszNIQgjbwadRUQdbEqyPRxySL
uNQnWvWCofOH4Pma5D+wecau5SfRfcQPvHwW3eqVrlmX+DuRflvVvhhMe3o0
653xRvZiKblcrnvG19XqbN/Eu8Ap7UYXEfp773SFvnO0ypLmuBvzakHBRaLF
xHewQCL0qKRtEMrK2NsOCwk9U+L6My1XIswdHkjhkZyNpseTfNc+HmytSUcm
HylYX3ToISozokmL7Zq0NL8SBrN+/hkCjLkv45AloAaeTMSWE8yw+qmdiIHa
tx/vzj300tbiw1Vj8D+RlhKBGReU6xaizYRGHGjEQ3Emi5OHS6aAIBMIWr5u
UK4jMG9Ue1lKohG+cTG1gaGOuohSHDqRMhv0PN4c8vmFZ05hgW5ZFF0d0doA
kjHP2gg/YvRLENEl/9GOGRmMtA21m7F27r9sBONIalJt1yvLr7LPnc/+Leo4
6+bxd7diiTbyn6MQc4UwzueTG5QgW4g/mInEBDHNeAkf3DL6hEX/+z++5IYe
kmxxbdTTZctyFxS0B1bLkwaGKqghpkpH/nRnmsqnRK2PKVJZF43KrZL+y9D6
HHX+Dowv3DrTzvxq+3R0GKXxa1vsJyZTDbp31TdwZi34Qnt6oXira4d0ynVL
4VJUvCNtdZ5o90IP/87Pr2O82zsLQ5BWeGr/GH5y5yOuMdxpdk/j8gg8IgVi
/G1GfAykxlc4b3+kO/2Kcw87D/H5c69x2ufPvtREv7TAsdxe+yQ+JpyYHb6l
wDRxRwf3Q1TfZsxP+H6gdGQPlZDhwxtdpFz7NWTroVv+3oX3EPYTfaR5rteH
u6zgYeYWSJdDe7w5xKVY8djikeUiOORtIgeao5SKFnt9dX3pXar+Y5pd/BPT
QPbCMbYVTbYnBoEnrM6dJRprv0JGPebSgp2LPwK7hRLLPWtZEPsUT7Fg5Lpv
h665ZIJQjSZH34Oya9+D2pVOzaER8sD7CejEm+7zTmoAYFRvd3VKqv8mho9m
rE1hvG4Ptt1ZRbI/fi4BQxYkXQOHYUZp+5bMJKEhmE8se/KvYc36LSxuXgqm
lnR052c2ysTDmz1Q1ascPsXWe53w89rHZDsyfv7AK7mf0lso3oQ0uiIT9/Q7
H2zFSXRz5BynzbeelQ/BJr2aDjmnn+mc0hH9TVcvdbp+h0Uls1PYZml7an/M
6zy7J4lyLV+eHzz/CXpIAN/sal0InGv7i4irxp+aBRVxIx3sbPVY6vcngpcH
Uao2NPrtmzGBP4cyui5vYLMdqPGdOsJh9zZSSJZdss0b9xjust/Z4jJdGvjC
i1k836VHdD4zOYPejYxcp2UZZ1R2nydpRNxzRe7TaLQ/v9AFpb3rv8R9XWLb
uOut7peP5hcr/1nEtT5HPm2EGWpoEqW+Gf7agyhI6hhRH0H8NVI0Atf+/OFr
pVGvKag6wYHAbr0odR1HX941HSl0XUiWpNz4nlSyQU1OzF3wggJ7+5DzF88a
M0PzBv8NTI8CUYwkqhj4ycZAjESuqtFkpNjJ5Vu4hFZXonr5whNxkiDqrHNG
KVuSxkaE5Mt/gyekHw1RZPEjvvmYSbpOHKJzaVV7r99w4OIQoMSBvFdt7ZQ1
rTJpv0+LZRvaxJU6/6n/xIVP6J1IvMI7IzjxTLuXh/3kPL3+B0lpeN8WAFP4
BrbaaV47cnMJwXzR9s3t7gGDr1umXGGRINAtRav9XvThhpw5KaCXorRJUn7x
/Tlpq7446aXsv1ks3XT186F0FB+YKlzXXyF87qM7X8E8KPsecfb5fWULKrpK
zxtssHffde9PxF25/uGtHupjVvHUZ6K5eZxGh6VMlqPLvKXicwqdkSKY1r6V
sNHY3z9gNBFQ3Ez8oeuWa1FzX/q3+bFKVQiib0uV8aeeY2CfALK/OvTCSqRr
OTKiq2rqsrVH+LyqrjXv+t77vesqZYUovNmyxhm1RKU7O9LXjDmO75fDXQXM
woU6LQmp9OhC0uBDtyCliEFoCs2eGPFom7WvuWmEdNCdKG6/Fb7j1vumeAh3
AHsmNOvhaL2Uc/M5j9sKqu3wVGdB9hqHGtoNmeNd26mIGtHw3/sO4v6DQJOo
+R6+9Ep2yR73IhadS3plE9Ar14YvZOShXzx/QpSV7lDN6T/A6uHiXTRi8GUV
5wPrh+MRqMMSgpT++YVvh/ALy9Q/wOF6K31D8c3S8H1Z6beMynZoZVmezMoK
vfu4IBwfQ9HUZd/Qv2sBw12W/QgEyH/SP/MzvrGzp4Uwe3b933h8er99cnQ8
PT5+tZ+ND5OjV4fu2G0PrLzHe7j5mrXH9N7++OR4+nI/OZpOX6X7L49fjVM/
zKvDY0fX3cF0eyAj9UtfujHHh6fI89Wnnkw/p+vjl/FTbfMkTPZgfDp+efDq
5dHB8cnRwPwiKGCrTgvO+GDehsDtgINKuX7OoV+z3fx/DIZ5xVpZe2O8f3o4
kPs4RVoyjBLOW7qKd/V9Dd3v2cP9U6vffPr37ttPBBs7ovAU0ntIH8xqFKDF
PS/27M8mmnuvF2UEYDT2dvSi3XpTVVuCuuiltaXQEsZYwjIueN6z/Ze4whc2
Eb00fL1P/063I5ffdvf0L4N4VQdlFlZ1ZssQvQzaquDNaRjvOyvE+tYCf1Dk
1xaIkGi3TYfj09fjHTs+3omfkkWVXUwUMO3Zf7d7o9EITOQzPgMy1o5MfGKU
2dD9Pfsfa2P1/u3uRtiIkXFYd8jY+DKjdk/x27eGiT4qBBO9F/pIWN/mp/d4
7Y2UhBZtyjB8HWnPDo9lq49H+6P9jSnCCz60oS+MT7ePRiejl+Pfbm9i4j8C
S4r+/V86uxvMjY8AAA==

-->

</rfc>

